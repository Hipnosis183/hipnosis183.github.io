---
// Import Astro components.
import Collapsible from '@/components/ui/Collapsible.astro';
import DesignMobile from '@/components/mobile/portfolio/Design.astro';
import ImageViewerMobile from '@/components/mobile/portfolio/ImageViewer.astro';

// Import Astro elements.
import { getCollection, render } from 'astro:content';

// Import language files.
const languages = await getCollection('i18n');
const language = languages.filter((v) => v.data.LANG == Astro.currentLocale)[0];

// Manage portfolio entries ordering and grouping.
const entries = [];
const entriesList = Astro.currentLocale == 'en' ? await getCollection('portfolio_en') : await getCollection('portfolio_es');
for (let entry of entriesList.sort((a, b) => { return new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf() })) {
  const { Content } = await render(entry);
  const i = entries.findIndex((v) => v.type == entry.data.type);
  if (i >= 0) { entries[i].entries.push({ ...entry, Content }); }
  else { entries.push({ type: entry.data.type, entries: [{ ...entry, Content }] }); }
}
---

<!-- Portfolio page. -->
<div class="portfolio-container p-mobile">
  <!-- Portfolio categories. -->
  <div class="portfolio-categories">
    <div id="web">
      <span>{ language.data.PORTFOLIO.WEB }</span>
    </div>
    <div id="other">
      <span>{ language.data.PORTFOLIO.OTHER }</span>
    </div>
    <div id="design">
      <span>{ language.data.PORTFOLIO.DESIGN }</span>
    </div>
  </div>
  <!-- Portfolio entries. -->
  { entries.map(($entries) => (
    <div id={ $entries.type } class="portfolio-entries active">
      { $entries.entries.map((entry) => (
        <div>
          { /* Portfolio entries list. */ }
          <div class="portfolio-list">
            <img id={ entry.data.code } src={ `/images/portfolio/${entry.data.code}/logo${entry.data.theme ? '-lite' : ''}.svg` } class="dark" />
            <img id={ entry.data.code } src={ `/images/portfolio/${entry.data.code}/logo${entry.data.theme ? '-dark' : ''}.svg` } class="light" />
          </div>
          { /* Portfolio entries contents. */ }
          <div id={ entry.data.code } class="portfolio-contents">
            { /* Portfolio entry header. */ }
            <div class="portfolio-header">
              <span class="portfolio-tags">
                { entry.data.tags.map((tag) => (
                  <code>{ tag }</code>
                )) }
              </span>
            </div>
            { /* Portfolio entry link. */ }
            <div class="portfolio-link">
              { entry.data.development && <span>
                <p>{ language.data.PORTFOLIO.DEVELOPMENT }</p>
              </span> }
              { entry.data.link && <a target="_blank" rel="noopener noreferrer" href={ entry.data.link }>
                <p>{ language.data.PORTFOLIO.GITHUB }</p>
                <div class="portfolio-github" />
              </a> }
            </div>
            { /* Portfolio entry body. */ }
            <Collapsible label={ language.data.PORTFOLIO.DESCRIPTION } style="margin-top:8px;">
              <div class="portfolio-body">
                <entry.Content />
              </div>
            </Collapsible>
            { /* Portfolio entry images. */ }
            { entry.data.images > 0 &&
              <Collapsible label={ language.data.PORTFOLIO.IMAGES } style="margin-top:8px;">
                <div class="portfolio-images">
                  { [...Array(entry.data.images)].map((v, i) =>
                    <div>
                      <img src={ `/images/portfolio/${entry.data.code}/${i}-thumb.png` }
                        data-id={ entry.data.code } data-index={ i } data-image={ `/images/portfolio/${entry.data.code}/${i}.png` } />
                    </div>
                  )}
                </div>
              </Collapsible>
            }
          </div>
        </div>
      )) }
    </div>
  )) }
  <!-- Portfolio design entries. -->
  <DesignMobile />
  <!-- Portfolio image viewer. -->
  <ImageViewerMobile />
</div>

<script is:inline data-astro-rerun>
  // Define portfolio selection variables.
  portfolioType = 'web';

  (() => {
    // Portfolio selection update.
    const portfolioUpdateType = () => {
      document.querySelectorAll('.p-mobile .portfolio-categories > div, .p-mobile .portfolio-entries').forEach((v) => {
        // Update selected category.
        if (v.id == portfolioType) { v.classList.add('active'); }
        else { v.classList.remove('active'); }
        window.dispatchEvent(new Event('resize'));
      });
    }; 
    setTimeout(() => { portfolioUpdateType(); }, 500);

    // Update selected portfolio category.
    const $portfolioUpdateType = (v) => {
      portfolioType = v;
      portfolioUpdateType();
    };
    document.querySelectorAll('.p-mobile .portfolio-categories > div').forEach((v) => {
      v.addEventListener('click', (e) => {
        $portfolioUpdateType(e.target.id);
      });
    });
  })();
</script>

<style>
/* Portfolio page. */
.portfolio-container {
  width: 100%;
}

/* Portfolio categories. */
.portfolio-categories {
  background-color: var(--color-header);
  border: 1px solid var(--color-button-border);
  border-radius: 4px;
  box-sizing: border-box;
  margin-bottom: 16px;
  overflow: hidden;
  transition: background-color 0.2s, border-color 0.2s;
}
.portfolio-categories > div {
  cursor: pointer;
  font-size: 18px;
  padding: 10px 16px;
  position: relative;
  text-align: center;
  transition: background-color 0.2s, border-color 0.2s;
  width: 100%;
}
.portfolio-categories > div:not(:last-child) {
  border-bottom: 1px solid var(--color-button-border);
}
.portfolio-categories > div.active {
  background-color: var(--color-blue);
}
.portfolio-categories > div > * {
  pointer-events: none;
}

/* Portfolio entries. */
.portfolio-entries > div {
  background-color: var(--color-footer);
  border: 1px solid var(--color-button-border);
  border-radius: 4px;
  box-sizing: border-box;
  overflow-y: hidden;
  transition: background-color 0.2s, border-color 0.2s;
}
.portfolio-entries > div:not(:last-child) {
  margin-bottom: 8px;
}
.portfolio-entries:not(.active) {
  display: none;
}

/* Portfolio entries list. */
.portfolio-list {
  background-color: var(--color-portfolio);
  border-bottom: 1px solid var(--color-button-border);
  box-sizing: border-box;
  transition: background-color 0.2s, border-color 0.2s;
}
.portfolio-list > img {
  height: 100px;
  object-fit: contain;
  padding: 16px;
  transition: background-color 0.2s;
  width: 100%;
}
body.dark .portfolio-list > img.light {
  display: none;
}
body:not(.dark) .portfolio-list > img.dark {
  display: none;
}

/* Portfolio entries contents. */
.portfolio-contents {
  display: flex;
  flex-direction: column;
  padding: 12px;
  padding-bottom: 16px;
}

/* Portfolio entry header. */
.portfolio-header {
  align-items: center;
  border-bottom: solid 1px var(--color-header-border);
  display: flex;
  flex-direction: column;
  margin-bottom: 12px;
  padding-bottom: 6px;
  transition: border-color 0.2s;
}
.portfolio-tags {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  white-space: nowrap;
}
.portfolio-tags > code {
  background-color: var(--color-portfolio-code);
  margin-bottom: 8px;
  margin-left: 8px;
  margin-right: 8px;
  padding: 3px 8px;
}

/* Portfolio entry body. */
.portfolio-body {
  background-color: var(--color-portfolio);
  border: 1px solid var(--color-button-border);
  border-top: none;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  padding: 12px;
  transition: background-color 0.2s, border-color 0.2s;
}

/* Portfolio entry images. */
.portfolio-images {
  align-items: center;
  background-color: var(--color-portfolio);
  border: 1px solid var(--color-button-border);
  border-top: none;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
  display: flex;
  flex-direction: column;
  padding: 12px;
  transition: background-color 0.2s, border-color 0.2s;
}
.portfolio-images > div {
  border-radius: 4px;
  overflow: hidden;
  width: fit-content;
}
.portfolio-images > div:not(:first-child) {
  margin-top: 8px;
}
.portfolio-images > div > img {
  cursor: pointer;
  transition: all 0.2s;
}

/* Portfolio entry link. */
.portfolio-link > a,
.portfolio-link > span {
  align-items: center;
  background-color: var(--color-button);
  border: 1px solid var(--color-portfolio-link);
  border-radius: 4px;
  color: var(--color-text);
  display: flex;
  justify-content: center;
  padding: 8px 12px;
  text-decoration: none;
  transition: background-color 0.2s, border-color 0.2s;
  white-space: nowrap;
}
.portfolio-link > a > p {
  margin-left: 6px;
  pointer-events: none;
}
.portfolio-link > span > p {
  line-height: 30px;
  pointer-events: none;
}
.portfolio-github {
  background-color: var(--color-text);
  height: 30px;
  margin-left: 10px;
  mask-image: url('/images/icons/logo-github-octocat.svg');
  -webkit-mask-image: url('/images/icons/logo-github-octocat.svg');
  transition: background-color 0.2s;
  width: 30px;
}

/* Responsiveness. */
@media screen and (min-width: 768px) {
  .portfolio-container {
    display: none;
  }
}
</style>